#Word Search
class Solution {
    public boolean exist(char[][] board, String word) {
        int rows = board.length;
        int cols = board[0].length;
        boolean [][] visited = new boolean [rows][cols];

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (board[i][j] == word.charAt(0) && searchWord (board, word, i, j, 0, visited)) {
                    return true;
                }
            }
        }
        return false;
    }

    public boolean searchWord(char [][] board, String word, int i, int j, int count, boolean [][] visited) {
        if (count == word.length()) return true;
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length 
            || board[i][j] != word.charAt(count) || visited[i][j]) {
                return false;
            }
        visited[i][j] = true;

        if (
            searchWord (board, word, i + 1, j, count + 1, visited)
            || searchWord (board, word, i - 1, j, count + 1, visited)
            || searchWord (board, word, i, j +1, count + 1, visited)
            || searchWord (board, word, i, j -1, count + 1, visited)
        ) return true;

        visited[i][j] = false;
        return false;
    }
}
